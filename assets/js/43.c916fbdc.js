(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{435:function(t,s,a){t.exports=a.p+"assets/img/data-structures.a8805783.png"},909:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"数据集"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据集"}},[t._v("#")]),t._v(" 数据集")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("数据集(dataset)")]),t._v("：通常是由数据构成的一个矩形数组")]),t._v(" "),n("li",[n("strong",[t._v("观测(observation)")]),t._v("：数据集中的行，相当于数据库中的记录(record)")]),t._v(" "),n("li",[n("strong",[t._v("变量(variable)")]),t._v("：数据集中的列，相当于数据库中的字段(field)")]),t._v(" "),n("li",[n("strong",[t._v("实例标识符")]),t._v("：又叫行名(rownames)")]),t._v(" "),n("li",[n("strong",[t._v("因子(factor)")]),t._v("：包括名义型和有序型变量(它们统称为类别型变量)")])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("案例分析:")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("病人编号"),n("br"),t._v("(PatientID)")]),t._v(" "),n("th",[t._v("入院时间"),n("br"),t._v("(AdmDate)")]),t._v(" "),n("th",[t._v("年龄"),n("br"),t._v("(Age)")]),t._v(" "),n("th",[t._v("糖尿病类型"),n("br"),t._v("(Diabetes)")]),t._v(" "),n("th",[t._v("病情"),n("br"),t._v("(Status)")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("1")]),t._v(" "),n("td",[t._v("10/15/2009")]),t._v(" "),n("td",[t._v("25")]),t._v(" "),n("td",[t._v("Type 1")]),t._v(" "),n("td",[t._v("Poor")])]),t._v(" "),n("tr",[n("td",[t._v("2")]),t._v(" "),n("td",[t._v("11/01/2009")]),t._v(" "),n("td",[t._v("25")]),t._v(" "),n("td",[t._v("Type 2")]),t._v(" "),n("td",[t._v("Improved")])]),t._v(" "),n("tr",[n("td",[t._v("3")]),t._v(" "),n("td",[t._v("10/21/2009")]),t._v(" "),n("td",[t._v("25")]),t._v(" "),n("td",[t._v("Type 1")]),t._v(" "),n("td",[t._v("Excellent")])]),t._v(" "),n("tr",[n("td",[t._v("4")]),t._v(" "),n("td",[t._v("10/28/2009")]),t._v(" "),n("td",[t._v("25")]),t._v(" "),n("td",[t._v("Type 1")]),t._v(" "),n("td",[t._v("Poor")])])])]),t._v(" "),n("ul",[n("li",[t._v("PatientID 是行/实例标识符")]),t._v(" "),n("li",[t._v("AdmDate 是日期型变量")]),t._v(" "),n("li",[t._v("Age 是连续型变量")]),t._v(" "),n("li",[t._v("Diabetes 是名义型变量")]),t._v(" "),n("li",[t._v("Status 是有序性变量")])])]),t._v(" "),n("h2",{attrs:{id:"数据结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),n("p",[t._v("数据结构是用来存储数据的，R 语言拥有以下数据结构：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("标量")]),t._v("：")]),t._v(" "),n("li",[n("strong",[t._v("向量")]),t._v("：")]),t._v(" "),n("li",[n("strong",[t._v("矩阵")]),t._v("：")]),t._v(" "),n("li",[n("strong",[t._v("数组")]),t._v("：")]),t._v(" "),n("li",[n("strong",[t._v("数据框")]),t._v("：")]),t._v(" "),n("li",[n("strong",[t._v("列表")]),t._v("：")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(435),alt:"R 中的数据结构"}})]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("备注")]),t._v(" "),n("ul",[n("li",[t._v("从上图看，标量、向量、矩阵和数组可以类比为数学中的点、线、面、体")]),t._v(" "),n("li",[t._v("数据结构可以用来存储数据，而数据又可分为不同的数据类型，R 支持的数据类型有：\n"),n("ul",[n("li",[t._v("数值型：")]),t._v(" "),n("li",[t._v("原生型：字节")]),t._v(" "),n("li",[t._v("字符型：")]),t._v(" "),n("li",[t._v("逻辑型：true, false")]),t._v(" "),n("li",[t._v("复数型：虚数")])])])])]),t._v(" "),n("h3",{attrs:{id:"标量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#标量"}},[t._v("#")]),t._v(" 标量")]),t._v(" "),n("ul",[n("li",[t._v("标量是只有一个元素的向量，可以看作为组成向量的个体")]),t._v(" "),n("li",[t._v("常用于保存常量")]),t._v(" "),n("li",[t._v("直接声明即可：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CN'")]),t._v("\nc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),t._v("\n")])])]),n("h3",{attrs:{id:"向量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#向量"}},[t._v("#")]),t._v(" 向量")]),t._v(" "),n("ul",[n("li",[t._v("向量是用于存储数值型、字符型、逻辑型数据的一维数组")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("c()")]),t._v(" 函数创建：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'one'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'two'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'three'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nc "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("FALSE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成数值序列的快捷语法")]),t._v("\na "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相当于 a <- c(1, 2, 3)")]),t._v("\n")])])]),n("ul",[n("li",[t._v("使用方括号访问向量元素：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问单个元素")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问多个元素：序列")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1 2 3")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问多个元素：非序列")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1 3 5")]),t._v("\n")])])]),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),n("ul",[n("li",[t._v("向量的元素下标是从 1 开始的，而大多数编程语言中数组的下标是从 0 开始的")]),t._v(" "),n("li",[t._v("一个向量只能保存一种类型的数据，以下操作是非法的：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'three'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("ul",[n("li",[t._v("为向量添加数据，当超出其最大下标时，它们之间的数据会被 "),n("code",[t._v("NA")]),t._v(" 填充")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1] 1 2 3 NA 5")]),t._v("\n")])])])]),t._v(" "),n("h3",{attrs:{id:"矩阵"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#矩阵"}},[t._v("#")]),t._v(" 矩阵")]),t._v(" "),n("ul",[n("li",[t._v("矩阵是一个二维数组，并且一个矩阵也是只能存储一种类型的数据(数值、字符或逻辑型数据)")]),t._v(" "),n("li",[t._v("通过 "),n("code",[t._v("matrix()")]),t._v(" 函数创建矩阵：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("matrix"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("NA")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 向量，表示用于创建矩阵的元素")]),t._v("\n       nrow "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数值，指定矩阵的行数、列数")]),t._v("\n       ncol "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数值，指定矩阵的行数、列数")]),t._v("\n       byrow "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("FALSE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 布尔值，用于指示是否按行填充")]),t._v("\n       dimname "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("NULL")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 缺省或列表，用于指示行名和列名")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("ul",[n("li",[t._v("示例：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将 1-20 按列填充为 5x4 的矩阵，其中 1:20 也可以使用 c(1:20)")]),t._v("\na "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" matrix"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nrow "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ncol "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      [,1] [,2] [,3] [,4]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1,]    1    6   11   16")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [2,]    2    7   12   17")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [3,]    3    8   13   18")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [4,]    4    9   14   19")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [5,]    5   10   15   20")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 按行填充 2x2 的矩阵，并指定行名和列名，list() 行数用于声明一个列表")]),t._v("\ncells "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nrnames "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'R1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'R2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncnames "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'C1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'C2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\na "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" matrix"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cells"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nrow"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ncol"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" byrow"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dimname "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rnames"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cnames"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    C1 C2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# R1 10  5")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# R2  1  6")]),t._v("\n")])])]),n("ul",[n("li",[t._v("访问矩阵元素：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" matrix"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nrow "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ncol "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" byrow"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问一行元素")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1] 5 6 7 8")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问一列元素")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1]  2  6 10 14 18")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问单个元素")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1] 6")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问多个元素：序列")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1] 2 3 4")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1] 5 9 13")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 访问多个元素：非序列")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1] 2 4")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1] 5 13")]),t._v("\n")])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("matrix() 内部对一些边界进行了处理：")]),t._v(" "),n("ul",[n("li",[t._v("使用 "),n("code",[t._v("matrix(1:20, nrow = 4, ncol = 4)")]),t._v(" 生成 4x4 的矩阵，它只会用到 1-16，并不会使程序奔溃")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("matrix(1:20, nrow = 5, ncol = 5)")]),t._v(" 生成 5x5 的矩阵，当用完 1-20 后，它会从新使用 1-20，相当于循环使用")])])]),t._v(" "),n("h3",{attrs:{id:"数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),n("ul",[n("li",[t._v("数组与矩阵类似，但是维度可以大于 2，并且数组中数据也是只能是同一种类型")]),t._v(" "),n("li",[t._v("通过 "),n("code",[t._v("array()")]),t._v(" 函数创建数组：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 向量，数组中的数据")]),t._v("\n      dimensions "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 缺省或数值型向量，指出各个维度的最大下标")]),t._v("\n      dimname "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("NULL")]),t._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 缺省或列表，用于指示各维度的名字")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("ul",[n("li",[t._v("示例：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一维数组")]),t._v("\na1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1] 1 2 3 4 5")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 二维数组")]),t._v("\na2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      [,1] [,2]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1,]    1    3")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [2,]    2    4")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 三维数组")]),t._v("\ndim1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'R1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'R2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndim2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'C1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'C2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndim3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A3'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\na3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dimnames "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dim1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dim2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dim3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# , , A1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   C1 C2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# R1  1  3")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# R2  2  4")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# , , A2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    C1 C2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# R1  5  7")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# R2  6  8")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# , , A3")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    C1 C2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# R1  9 11")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# R2 10 12")]),t._v("\n")])])]),n("ul",[n("li",[t._v("访问数组元素：与矩阵相似")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("a3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1] 7")]),t._v("\na3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1] 3 7 11")]),t._v("\n")])])]),n("h3",{attrs:{id:"数据框"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据框"}},[t._v("#")]),t._v(" 数据框")]),t._v(" "),n("ul",[n("li",[t._v("数据框可以允许不同类型的数据，因此是 R 语言中最常处理的数据")]),t._v(" "),n("li",[t._v("通过 "),n("code",[t._v("data.frame()")]),t._v(" 函数创建：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("data.frame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("col1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" col2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" col3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token ellipsis"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n           row.names "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n           check.rows "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("FALSE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n           check.names "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n           fix.empty.names "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n           stringsAsFactors "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" default.stringsAsFactors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("ul",[n("li",[t._v("示例：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("id "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nage "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncity "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'广州'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'深圳'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'北京'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nf "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" data.frame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" city"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   id age city")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1  1  25 广州")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2  2  18 深圳")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3  3  33 北京")]),t._v("\n")])])]),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),n("ul",[n("li",[t._v("虽然数据框允许不同类型的数据名，但是每一列的数据必须是同一类型的")])])]),t._v(" "),n("ul",[n("li",[t._v("访问数据框：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过下标：返回 frame")]),t._v("\nf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   id age")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1  1  25")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2  2  18")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3  3  33")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过列名：返回 frame")]),t._v("\nf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出同上")]),t._v("\nf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  age")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1  25")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2  18")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3  33")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用 $ 引用变量：返回向量")]),t._v("\nf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("age             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1] 25 18 33")]),t._v("\n")])])]),n("h3",{attrs:{id:"列表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#列表"}},[t._v("#")]),t._v(" 列表")]),t._v(" "),n("ul",[n("li",[t._v("列表是最复杂的一种数据结构，用于组合向量、矩阵、数据框，甚至是其他列表")]),t._v(" "),n("li",[t._v("列表是一种重要的数据结构，因为它是很多 R 函数的返回值类型")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("list()")]),t._v(" 函数创建列表：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# obj1, obj2, ...：向量、矩阵、数据框或列表")]),t._v("\nl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token ellipsis"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为对象命名，方便使用变量访问，如使用 l$ages 可以访问 obj2")]),t._v("\nl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("title "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ages "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("ul",[n("li",[t._v("示例：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("t "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'create a list'")]),t._v("\na "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nh "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" matrix"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nrow "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("title "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ages "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $title")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# [1] "create a list"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $ages")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1] 22 18 33")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [[3]]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     [,1] [,2]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1,]    1    3")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [2,]    2    4")]),t._v("\n")])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),n("ul",[n("li",[t._v("可以看到，每组数据前面都有一个标识("),n("code",[t._v("$age")]),t._v(", "),n("code",[t._v("$title")]),t._v(", "),n("code",[t._v("[[3]]")]),t._v(")，不指定标识时，默认为数字序列")])])]),t._v(" "),n("ul",[n("li",[t._v("访问列表：")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用下标或命名：一个方括号，返回包含对象标识的数据")]),t._v("\nl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相当于 l['ages']")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $title")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# [1] "create a list"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用下标或命名：两个方括号，返回没有对象标识的数据")]),t._v("\nl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相当于 l[['ages']]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# [1] "create a list"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用变量")]),t._v("\nl"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v("ages      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1] 22 18 33")]),t._v("\n")])])]),n("h2",{attrs:{id:"因子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#因子"}},[t._v("#")]),t._v(" 因子")]),t._v(" "),n("h3",{attrs:{id:"概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("名义型变量")]),t._v("：没有顺序之分的类别变量")]),t._v(" "),n("li",[n("strong",[t._v("有序型变量")]),t._v("：表示一种顺序关系，而非数量关系")]),t._v(" "),n("li",[n("strong",[t._v("连续型变量")]),t._v("：可以呈现为某个范围内的任意值，并同时表示了顺序和数量")]),t._v(" "),n("li",[n("strong",[t._v("因子")]),t._v("：名义型变量和有序型变量的统称")])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("说明：")]),t._v(" "),n("ul",[n("li",[t._v("因子在 R 中非常重要，它决定了"),n("strong",[t._v("数据的分析方式")]),t._v("以及"),n("strong",[t._v("如何进行视觉呈现")])])])]),t._v(" "),n("h3",{attrs:{id:"factor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#factor"}},[t._v("#")]),t._v(" factor")]),t._v(" "),n("ul",[n("li",[t._v("函数 "),n("code",[t._v("factor()")]),t._v(" 以一个整数向量的形式存储类别值，整数的取值范围是 "),n("code",[t._v("[1....k]")]),t._v("，同时由一个字符串(原始值)组成的内部向量将映射到这些整数上")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("diabetes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Type1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Type2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Type1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Type1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndiabetes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" factor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("diabetes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将向量存储为 (1, 2, 1, 1)，并在内部将其关联 1=Type1, 2=Type2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 针对此向量进行的任何分析都会将其作为名义型变量对待，并自动选择适合这一测量尺度的统计方法")]),t._v("\n")])])]),n("ul",[n("li",[t._v("表示有序型变量：指定参数 "),n("code",[t._v("order=TRUE")])])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("status "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Poor'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Improved'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Excellent'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Poor'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstatus "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" factor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" order"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将向量编码为 (3, 2, 1, 3)，并在内部关联 1=Excellent, 2=Improved, 3=Poor")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 针对此向量进行的任何分析都会将其作为有序型变量对待，并自动选择合适的统计方法")]),t._v("\n")])])]),n("ul",[n("li",[t._v("覆盖默认值：对于字符型向量，因子的水平默认按字母顺序创建，但可以指定 "),n("code",[t._v("levels()")]),t._v(" 选项修改")])]),t._v(" "),n("div",{staticClass:"language-r extra-class"},[n("pre",{pre:!0,attrs:{class:"language-r"}},[n("code",[t._v("status "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Poor'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Improved'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Excellent'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Poor'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstatus "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),t._v(" factor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" order"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("TRUE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 levels "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Poor'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Improved'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Excellent'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将关联 1=Poor, 2=Improved, 3=Excellent，向量编码为 (1, 2, 3, 1)")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[448],{887:function(t,a,s){"use strict";s.r(a);var r=s(25),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#错误"}},[t._v("#")]),t._v(" 错误")]),t._v(" "),s("h3",{attrs:{id:"错误处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[t._v("#")]),t._v(" 错误处理")]),t._v(" "),s("ul",[s("li",[t._v("try: 检测可能发生错误的语句块")]),t._v(" "),s("li",[t._v("except: 可以有多个，只匹配一个，也可以同是处理多个(放置于一个元组中)，最后的 except 可以不带异常名")]),t._v(" "),s("li",[t._v("else: 没有发生任何异常时执行")]),t._v(" "),s("li",[t._v("finally: 是否发生异常都会执行")])]),t._v(" "),s("h3",{attrs:{id:"抛出错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抛出错误"}},[t._v("#")]),t._v(" 抛出错误")]),t._v(" "),s("ul",[s("li",[t._v("raise：可以不带参数，参数只能是异常类或异常实例")]),t._v(" "),s("li",[t._v("自定义异常")]),t._v(" "),s("li",[t._v("清理行为")])]),t._v(" "),s("h2",{attrs:{id:"调试和测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调试和测试"}},[t._v("#")]),t._v(" 调试和测试")]),t._v(" "),s("h3",{attrs:{id:"调试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调试"}},[t._v("#")]),t._v(" 调试")]),t._v(" "),s("ul",[s("li",[t._v("print()：打印信息")]),t._v(" "),s("li",[t._v("assert：断言")]),t._v(" "),s("li",[t._v("logging 模块：打印错误日志")]),t._v(" "),s("li",[t._v("IDE 断点和调试")])]),t._v(" "),s("h3",{attrs:{id:"单元测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单元测试"}},[t._v("#")]),t._v(" 单元测试")])])}),[],!1,null,null,null);a.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[455],{894:function(t,s,n){"use strict";n.r(s);var a=n(25),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"分类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),n("p",[t._v("基本数据类型：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Numbers")]),t._v("：数值类型，其内部还会细分\n"),n("ul",[n("li",[t._v("int：整型")]),t._v(" "),n("li",[t._v("long：长整型")]),t._v(" "),n("li",[t._v("float：浮点型")]),t._v(" "),n("li",[t._v("complex：复数类型")])])]),t._v(" "),n("li",[n("code",[t._v("Boolean")]),t._v("：布尔值，"),n("code",[t._v("True")]),t._v(" 或 "),n("code",[t._v("False")]),t._v("（注意开头的大写的）")]),t._v(" "),n("li",[n("code",[t._v("None")]),t._v("：空值，相当于其他语言的 null")]),t._v(" "),n("li",[n("code",[t._v("String")]),t._v("：字符串，单引号双引号均可以")]),t._v(" "),n("li",[n("code",[t._v("List")]),t._v("：列表，相当于其他语言的数组")]),t._v(" "),n("li",[n("code",[t._v("Tuple")]),t._v("：元组，相当于只读的列表，但是使用括号 "),n("code",[t._v("()")]),t._v(" 而不是 "),n("code",[t._v("[]")])]),t._v(" "),n("li",[n("code",[t._v("Dictionary")]),t._v("：字典，其他语言的对象")]),t._v(" "),n("li",[n("code",[t._v("Set")]),t._v("：集合，其他语言的哈希表，元素都是不重复的")])]),t._v(" "),n("p",[t._v("可以使用 "),n("code",[t._v("type()")]),t._v(" 函数返回变量的类型：")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <type 'int'>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <type 'float'>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <type 'str'>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <type 'bool'>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <type 'NoneType'>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <type 'list'>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <type 'tuple'>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <type 'dict'>")]),t._v("\n")])])]),n("h2",{attrs:{id:"类型转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),n("p",[t._v("可以使用相应的方法对数据类型进行转换：")]),t._v(" "),n("ul",[n("li",[t._v("数值\n"),n("ul",[n("li",[n("code",[t._v("int(x [, base])")]),t._v("： 转换为整数")]),t._v(" "),n("li",[n("code",[t._v("long(x [, base])")]),t._v("： 转换为长整数")]),t._v(" "),n("li",[n("code",[t._v("float(x)")]),t._v("： 转换为浮点数")]),t._v(" "),n("li",[n("code",[t._v("complex(real [, imag])")]),t._v("： 创建一个复数")]),t._v(" "),n("li",[n("code",[t._v("ord(x)")]),t._v("： 将字符转换为整数(为其对应的 Unicode 编码)")])])]),t._v(" "),n("li",[t._v("字符\n"),n("ul",[n("li",[n("code",[t._v("chr(x)")]),t._v("： 将整数(Unicode 编码)转换为一个字符")]),t._v(" "),n("li",[n("code",[t._v("unichr(x)")]),t._v("： 将整数转换为一个 Unicode 字符")])])]),t._v(" "),n("li",[t._v("字符串\n"),n("ul",[n("li",[n("code",[t._v("str(x)")]),t._v("： 转换为字符串")]),t._v(" "),n("li",[n("code",[t._v("repr(x)")]),t._v("： 转换为表达式字符串")]),t._v(" "),n("li",[n("code",[t._v("hex(x)")]),t._v("： 将整数转换为十六进制字符串")]),t._v(" "),n("li",[n("code",[t._v("oct(x)")]),t._v("： 将整数转换为八进制字符串")])])]),t._v(" "),n("li",[t._v("列表\n"),n("ul",[n("li",[n("code",[t._v("list(s)")]),t._v("： 将序列转换为列表")])])]),t._v(" "),n("li",[t._v("元组\n"),n("ul",[n("li",[n("code",[t._v("tuple(s)")]),t._v("： 将序列转换为元组")])])]),t._v(" "),n("li",[t._v("字典\n"),n("ul",[n("li",[n("code",[t._v("dict(d)")]),t._v("： 以序列元组创建一个字典")])])]),t._v(" "),n("li",[t._v("集合\n"),n("ul",[n("li",[n("code",[t._v("set(s)")]),t._v("： 转换为可变集合")]),t._v(" "),n("li",[n("code",[t._v("frozenset(s)")]),t._v("： 转换为不可变集合")])])]),t._v(" "),n("li",[t._v("对象\n"),n("ul",[n("li",[n("code",[t._v("eval(str)")]),t._v("： 计算表达式，返回一个对象")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[456],{895:function(t,e,r){"use strict";r.r(e);var o=r(25),v=Object(o.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("list")]),t._v("、"),r("code",[t._v("tuple")]),t._v("、"),r("code",[t._v("dictionary")]),t._v("、"),r("code",[t._v("set")]),t._v("、"),r("code",[t._v("str")]),t._v("、"),r("code",[t._v("generator")]),t._v(" 都可以被 "),r("code",[t._v("for...in")]),t._v(" 遍历，称之为可迭代对象："),r("code",[t._v("Iterable")])]),t._v(" "),r("li",[t._v("而 generator 是迭代器(Iterator)对象，其他也可以转化为 Iterator 对象")]),t._v(" "),r("li",[t._v("可以使用 "),r("code",[t._v("isinstance()")]),t._v(" 判断一个对象是否是 Iterator 对象")]),t._v(" "),r("li",[r("code",[t._v("iter(s)")]),t._v("：将可迭代对象 s 变成迭代器对象 Iterator")])])])}),[],!1,null,null,null);e.default=v.exports}}]);
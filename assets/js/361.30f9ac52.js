(window.webpackJsonp=window.webpackJsonp||[]).push([[361],{790:function(t,a,s){"use strict";s.r(a);var n=s(25),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("h3",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),s("p",[t._v("参考 "),s("a",{attrs:{href:"http://nodejs.cn/api/stream.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Stream"),s("OutboundLink")],1),t._v(":")]),t._v(" "),s("ul",[s("li",[t._v("所有 "),s("code",[t._v("Stream")]),t._v(" 对象都是 "),s("code",[t._v("EventEmitter")]),t._v(" 的实例")]),t._v(" "),s("li",[s("code",[t._v("Stream")]),t._v(" 是一个抽象接口，Node 中有很多对象实现了这个接口")]),t._v(" "),s("li",[t._v("stream 模块主要用于开发者创建新类型的流实例，对于以消费流对象为主的开发者，极少需要直接使用 stream 模块")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("备注：")]),t._v(" "),s("ul",[s("li",[t._v("流类似 UNIX 中 的管道数据")]),t._v(" "),s("li",[t._v("编写/选择网络或数据库类型的模块时，支持流 API 能提高性能，书写更优美的代码")])])]),t._v(" "),s("h3",{attrs:{id:"流类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流类型"}},[t._v("#")]),t._v(" 流类型")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Writable")]),t._v(": 可写流，如 "),s("code",[t._v("fs.createWriteStream()")])]),t._v(" "),s("li",[s("code",[t._v("Readable")]),t._v(": 可读流，如 "),s("code",[t._v("fs.createReadStream()")])]),t._v(" "),s("li",[s("code",[t._v("Duplex")]),t._v(": 可读写的双工流，如 "),s("code",[t._v("net.Socket")])]),t._v(" "),s("li",[s("code",[t._v("Transform")]),t._v(": 在读写过程中可以修改或转换数据的 "),s("code",[t._v("Duplex")]),t._v(" 流，如 "),s("code",[t._v("zlib.createDeflate()")])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("说明：")]),t._v(" "),s("ul",[s("li",[t._v("可写流和可读流都会在内部的缓冲器中存储数据，可以分别使用的 "),s("code",[t._v("writable.writableBuffer")]),t._v("/"),s("code",[t._v("readable.readableBuffer")]),t._v(" 来获取")]),t._v(" "),s("li",[t._v("可缓冲的数据大小取决于传入流构造函数的 "),s("code",[t._v("highWaterMark")]),t._v(" 选项\n"),s("ul",[s("li",[t._v("对于普通的流，其指定了字节的总数")]),t._v(" "),s("li",[t._v("对于对象模式的流，其指定了对象的总数")])])]),t._v(" "),s("li",[t._v("当调用 "),s("code",[t._v("stream.push(chunk)")]),t._v(" 时，数据会被缓冲在可读流中；如果流的消费者没有调用 "),s("code",[t._v("stream.read()")]),t._v("，则数据会保留在内部队列中直到被消费")]),t._v(" "),s("li",[t._v("一旦内部的可读缓冲的总大小达到 "),s("code",[t._v("highWaterMark")]),t._v(" 指定的阈值时，流会暂时停止从底层资源读取数据，直到当前缓冲的数据被消费")]),t._v(" "),s("li",[t._v("当调用 "),s("code",[t._v("writable.write(chunk)")]),t._v(" 时，数据会被缓冲在可写流中，并返回一个布尔值(当缓冲区未满时为 true)")]),t._v(" "),s("li",[t._v("因为 "),s("code",[t._v("Duplex")]),t._v(" 和 "),s("code",[t._v("Transform")]),t._v(" 都是可读写的，所以它们各自维护着两个相互独立的内部缓冲器用于读取和写入，在维护数据流时，读取和写入两边可以各自独立地运作")])])]),t._v(" "),s("h3",{attrs:{id:"可读流-vs-可写流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可读流-vs-可写流"}},[t._v("#")]),t._v(" 可读流 VS 可写流")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("可读流")]),t._v(" "),s("th",[t._v("可写流")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("客户端的 HTTP 响应")]),t._v(" "),s("td",[t._v("客户端的 HTTP 请求")])]),t._v(" "),s("tr",[s("td",[t._v("服务器的 HTTP 请求")]),t._v(" "),s("td",[t._v("服务器的 HTTP 响应")])]),t._v(" "),s("tr",[s("td",[t._v("fs 的读取流")]),t._v(" "),s("td",[t._v("fs 的写入流")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("process.stdin")])]),t._v(" "),s("td",[s("code",[t._v("process.stdout")]),t._v(" 和 "),s("code",[t._v("process.stderr")])])]),t._v(" "),s("tr",[s("td",[t._v("子进程 stdout 与 stderr")]),t._v(" "),s("td",[t._v("子进程 stdin")])]),t._v(" "),s("tr",[s("td",[t._v("zlib 流")]),t._v(" "),s("td",[t._v("zlib 流")])]),t._v(" "),s("tr",[s("td",[t._v("crypto 流")]),t._v(" "),s("td",[t._v("crypto 流")])]),t._v(" "),s("tr",[s("td",[t._v("TCP socket")]),t._v(" "),s("td",[t._v("TCP socket")])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("其中：")]),t._v(" "),s("ul",[s("li",[t._v("zlib 流/crypto 流/TCP socket 为 Duplex 流")]),t._v(" "),s("li",[t._v("zlib 流/crypto 流 又为 Transform 流")])])]),t._v(" "),s("h3",{attrs:{id:"实现流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现流"}},[t._v("#")]),t._v(" 实现流")]),t._v(" "),s("ul",[s("li",[t._v("实现流必须继承四个基本流类之一，并调用父构造方法，新的流类根据类型必须实现一些方法：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("用例")]),t._v(" "),s("th",[t._v("类")]),t._v(" "),s("th",[t._v("需要实现的方法")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("只读")]),t._v(" "),s("td",[t._v("Readable")]),t._v(" "),s("td",[s("code",[t._v("_read()")])])]),t._v(" "),s("tr",[s("td",[t._v("只写")]),t._v(" "),s("td",[t._v("Writable")]),t._v(" "),s("td",[s("code",[t._v("_write()")]),t._v(", "),s("code",[t._v("_writev()")]),t._v(", "),s("code",[t._v("_final()")])])]),t._v(" "),s("tr",[s("td",[t._v("读写")]),t._v(" "),s("td",[t._v("Duplex")]),t._v(" "),s("td",[s("code",[t._v("_read()")]),t._v(", "),s("code",[t._v("_write()")]),t._v(", "),s("code",[t._v("_writev()")]),t._v(", "),s("code",[t._v("_final()")])])]),t._v(" "),s("tr",[s("td",[t._v("操作写入的数据并读取")]),t._v(" "),s("td",[t._v("Transform")]),t._v(" "),s("td",[s("code",[t._v("_transform()")]),t._v(", "),s("code",[t._v("_flush()")]),t._v(", "),s("code",[t._v("_final()")])])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("备注：")]),t._v(" "),s("ul",[s("li",[t._v("避免重写诸如 "),s("code",[t._v("write()")]),t._v("、"),s("code",[t._v("end()")]),t._v("、"),s("code",[t._v("cork()")]),t._v("、"),s("code",[t._v("uncork()")]),t._v("、"),s("code",[t._v("read()")]),t._v(" 和 "),s("code",[t._v("destroy()")]),t._v(" 之类的公共方法")]),t._v(" "),s("li",[t._v("避免通过 "),s("code",[t._v("emit()")]),t._v(" 触发诸如 'error'、 'data'、 'end'、 'finish' 和 'close' 之类的内部事件")]),t._v(" "),s("li",[t._v("否则会破坏当前和未来的流的不变量，从而导致与其他流、流的实用工具、以及用户期望的行为或兼容性问题")])])]),t._v(" "),s("h2",{attrs:{id:"readable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readable"}},[t._v("#")]),t._v(" Readable")]),t._v(" "),s("h3",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("ul",[s("li",[t._v("可读流是对提供数据的来源的一种抽象")]),t._v(" "),s("li",[t._v("所有可读流都实现了 "),s("code",[t._v("stream.Readable")]),t._v(" 类定义的接口")]),t._v(" "),s("li",[t._v("在任意时刻，可读流会处于以下三种状态之一："),s("code",[t._v("readable.readableFlowing === null || false || true")])])]),t._v(" "),s("h3",{attrs:{id:"事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("error")]),t._v("：发生错误时触发")]),t._v(" "),s("li",[s("code",[t._v("readable")]),t._v("：当有数据可从流中读取时触发")]),t._v(" "),s("li",[s("code",[t._v("data")]),t._v("：当流将数据块传送给消费者后触发")]),t._v(" "),s("li",[s("code",[t._v("end")]),t._v("：当流中没有数据可供消费时触发")]),t._v(" "),s("li",[s("code",[t._v("close")]),t._v("：当流或其底层资源(比如文件描述符)被关闭时触发(如果使用 "),s("code",[t._v("emitClose")]),t._v(" 选项创建可读流，则始终触发)")]),t._v(" "),s("li",[s("code",[t._v("pause")]),t._v("：当调用 "),s("code",[t._v("stream.pause()")]),t._v(" 且 "),s("code",[t._v("readsFlowing !== false")]),t._v(" 时触发")]),t._v(" "),s("li",[s("code",[t._v("resume")]),t._v("：当调用 "),s("code",[t._v("stream.resume()")]),t._v(" 且 "),s("code",[t._v("readsFlowing !== true")]),t._v(" 时触发")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" readable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./test.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  highWaterMark"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每次只读取 5 字节")]),t._v("\n  autoClose"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 跳过第二次读取")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'readable'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'---Pause---'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pause")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'---Resume---'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resume")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    readable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 读取缓冲数据")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("times: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(", total: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(", data: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("chunk"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'数据已读取完毕...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nreadable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'close'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'正在关闭流...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\ntimes: 1, total: 5, data: hello\n---pause---\n---Resume---\ntimes: 3, total: 5, data:  worl\ntimes: 4, total: 2, data: d!\n数据已读取完毕...\n正在关闭流...\n*/")]),t._v("\n")])])]),s("h3",{attrs:{id:"属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("readable.readableEnded")]),t._v("：当 "),s("code",[t._v("end")]),t._v(" 事件被触发时变为 "),s("code",[t._v("true")])]),t._v(" "),s("li",[s("code",[t._v("readable.destroyed")]),t._v("：在调用 "),s("code",[t._v("readable.destroy()")]),t._v(" 之后为 "),s("code",[t._v("true")])]),t._v(" "),s("li",[s("code",[t._v("readable.readable")]),t._v("：若调用 "),s("code",[t._v("readable.read()")]),t._v(" 是安全的，则为 "),s("code",[t._v("true")])]),t._v(" "),s("li",[s("code",[t._v("readable.readableFlowing")]),t._v("：可读流的状态")]),t._v(" "),s("li",[s("code",[t._v("readable.readableEncoding")]),t._v("：获取用于给定可读流的 "),s("code",[t._v("encoding")]),t._v(" 属性")]),t._v(" "),s("li",[s("code",[t._v("readable.readableLength")]),t._v("：此属性包含准备读取的队列中的字节数（或对象数）")]),t._v(" "),s("li",[s("code",[t._v("readable.readableObjectMode")]),t._v("：获取用于给定可读流的 "),s("code",[t._v("objectMode")]),t._v(" 属性")]),t._v(" "),s("li",[s("code",[t._v("readable.readableHighWaterMark")]),t._v("：返回构造可读流时传入的 "),s("code",[t._v("highWaterMark")]),t._v(" 的值")])]),t._v(" "),s("h3",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("readable.destroy([error])")]),t._v(": 销毁流")]),t._v(" "),s("li",[s("code",[t._v("readable.isPaused()")]),t._v(": 返回可读流当前的操作状态")]),t._v(" "),s("li",[s("code",[t._v("readable.pause()")]),t._v(": 使流动模式的流停止触发 "),s("code",[t._v("data")]),t._v(" 事件，并切换出流动模式，任何可用的数据都会保留在内部缓存中")]),t._v(" "),s("li",[s("code",[t._v("readable.resume()")]),t._v(": 将被暂停的流恢复触发 "),s("code",[t._v("data")]),t._v(" 事件，并将流切换到流动模式")]),t._v(" "),s("li",[s("code",[t._v("readable.setEncoding(encoding)")]),t._v(": 设置从可读流读取的数据使用的字符编码")]),t._v(" "),s("li",[s("code",[t._v("readable.pipe(destination[, end])")]),t._v(": 绑定可写流和可读流，自动切换到流动模式，并将可读流的所有数据推送到绑定的可写流")]),t._v(" "),s("li",[s("code",[t._v("readable.unpipe([destination])")]),t._v(": 解绑之前使用 "),s("code",[t._v("stream.pipe()")]),t._v(" 方法绑定的可写流，没有指定 "),s("code",[t._v("destination")]),t._v(" 时会解绑所有管道")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" zlib "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zlib'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" zlib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGzip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test.txt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test.txt.gz'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("readable.read([size])")]),t._v(": 从内部缓冲拉取并返回数据")]),t._v(" "),s("li",[s("code",[t._v("readable.unshift(chunk[, encoding])")]),t._v(": EOF 信号会被放在 buffer 的末尾，任何缓冲的数据仍将会被刷新")]),t._v(" "),s("li",[s("code",[t._v("readable[Symbol.asyncIterator]()")]),t._v(":")])]),t._v(" "),s("h2",{attrs:{id:"writeable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writeable"}},[t._v("#")]),t._v(" Writeable")]),t._v(" "),s("h3",{attrs:{id:"简介-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介-2"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("ul",[s("li",[t._v("所有可写流都实现了 "),s("code",[t._v("stream.Writable")]),t._v(" 类定义的接口")]),t._v(" "),s("li",[t._v("可写流是对数据要被写入的目的地的一种抽象")])]),t._v(" "),s("h3",{attrs:{id:"事件-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件-2"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("error")]),t._v(": 写入数据发生错误时触发")]),t._v(" "),s("li",[s("code",[t._v("close")]),t._v(": 当流或其底层资源(比如文件描述符)被关闭时触发，使用 "),s("code",[t._v("emitClose")]),t._v(" 选项创建的可写流始终会触发该事件")]),t._v(" "),s("li",[s("code",[t._v("drain")]),t._v(": 调用 "),s("code",[t._v("stream.write(chunk)")]),t._v(" 返回 false，且当可以继续写入数据到流时触发")]),t._v(" "),s("li",[s("code",[t._v("finish")]),t._v(": 调用 "),s("code",[t._v("stream.end()")]),t._v(" 且缓冲数据都已传给底层系统之后触发")]),t._v(" "),s("li",[s("code",[t._v("pipe")]),t._v(": 在可读流上调用 "),s("code",[t._v("stream.pipe()")]),t._v(" 方法时触发")]),t._v(" "),s("li",[s("code",[t._v("unpipe")]),t._v(": 在可读流上调用 "),s("code",[t._v("stream.unpipe()")]),t._v(" 方法时触发；当可读流通过管道流向可写流发生错误时也会触发")])]),t._v(" "),s("h3",{attrs:{id:"属性-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性-2"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("writable.destroyed")]),t._v("：调用 "),s("code",[t._v("writable.destroy()")]),t._v(" 之后为 true")]),t._v(" "),s("li",[s("code",[t._v("writable.writable")]),t._v("：若调用 "),s("code",[t._v("writable.write()")]),t._v(" 是安全的，则为 true")]),t._v(" "),s("li",[s("code",[t._v("writable.writableEnded")]),t._v("：调用 "),s("code",[t._v("writable.end()")]),t._v(" 之后为 true")]),t._v(" "),s("li",[s("code",[t._v("writable.writableLength")]),t._v("：包含准备写入队列中的字节/对象数")]),t._v(" "),s("li",[s("code",[t._v("writable.writableFinished")]),t._v("：在触发 "),s("code",[t._v("finish")]),t._v(" 事件之前立即设置为 true")]),t._v(" "),s("li",[s("code",[t._v("writable.writableHighWaterMark")]),t._v("：返回构造可写流时传入的 "),s("code",[t._v("highWaterMark")]),t._v(" 的值")]),t._v(" "),s("li",[s("code",[t._v("writable.writableObjectMode")]),t._v("：获取用于给定 Writable 流的 "),s("code",[t._v("objectMode")]),t._v(" 属性")]),t._v(" "),s("li",[s("code",[t._v("writable.writableCorked")]),t._v("：为了完全 uncork 流所需要调用的 "),s("code",[t._v("writable.uncork()")]),t._v(" 的次数")])]),t._v(" "),s("h3",{attrs:{id:"方法-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-2"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("writable.destroy([error])")]),t._v(": 销毁流")]),t._v(" "),s("li",[s("code",[t._v("writable.cork()")]),t._v(": 强制把所有写入的数据都缓冲到内存中")]),t._v(" "),s("li",[s("code",[t._v("writable.uncork()")]),t._v(": 将调用 "),s("code",[t._v("stream.cork()")]),t._v(" 后缓冲的所有数据输出到目标")]),t._v(" "),s("li",[s("code",[t._v("writable.end([chunk[, encoding]][, callback])")]),t._v(": 表明之后没有数据写入可写流，此时可再写入一块数据")]),t._v(" "),s("li",[s("code",[t._v("writable.setDefaultEncoding(encoding)")]),t._v(": 为可写流设置默认的 "),s("code",[t._v("encoding")])]),t._v(" "),s("li",[s("code",[t._v("writable.write(chunk[, encoding][, callback])")]),t._v(": 写入数据到流，在数据被完全处理后触发回调")])]),t._v(" "),s("h2",{attrs:{id:"duplex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#duplex"}},[t._v("#")]),t._v(" Duplex")]),t._v(" "),s("h3",{attrs:{id:"简介-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介-3"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("ul",[s("li",[t._v("Duplex 同时实现了 Readable 和 Writable 接口")])]),t._v(" "),s("h3",{attrs:{id:"实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),s("h2",{attrs:{id:"transform"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transform"}},[t._v("#")]),t._v(" Transform")]),t._v(" "),s("h3",{attrs:{id:"简介-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介-4"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("ul",[s("li",[t._v("Transform 是一种 Duplex 流，但它的输出与输入是相关联的")]),t._v(" "),s("li",[t._v("Transform 流也同时实现了 Readable 和 Writable 接口")])]),t._v(" "),s("h3",{attrs:{id:"方法-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-3"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("transform.destroy([error])")]),t._v(": 销毁流，并可选地触发 "),s("code",[t._v("error")]),t._v(" 事件")])]),t._v(" "),s("h3",{attrs:{id:"实现-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现-2"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),s("h2",{attrs:{id:"其他-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他-api"}},[t._v("#")]),t._v(" 其他 API")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("stream.Readable.from(iterable, [options])")]),t._v(": 从迭代器中创建可读流")]),t._v(" "),s("li",[s("code",[t._v("stream.finished(stream[, options], callback)")]),t._v(": 当流不再可读、可写、或遇到错误、或过早关闭事件时该函数会获得通知")]),t._v(" "),s("li",[s("code",[t._v("stream.pipeline(streams, callback)")]),t._v(": 一个模块方法，使用管道传送多个流，并转发错误和正确地清理，当管道完成时提供回调")]),t._v(" "),s("li",[s("code",[t._v("stream.pipeline(source[, ...transforms], destination, callback)")]),t._v("：一个模块方法，使用管道传送多个流，并转发错误和正确地清理，当管道完成时提供回调")])]),t._v(" "),s("h2",{attrs:{id:"使用技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用技巧"}},[t._v("#")]),t._v(" 使用技巧")]),t._v(" "),s("h3",{attrs:{id:"流实现静态-web-服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流实现静态-web-服务器"}},[t._v("#")]),t._v(" 流实现静态 web 服务器")]),t._v(" "),s("ul",[s("li",[t._v("响应请求并返回文件数据")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缺点：将整个文件读入内存，当文件过大/过多时性能下降")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nhttp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("\n      res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Server is running at http://localhost:3000'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("优化：使用流")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nhttp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Server is running at http://localhost:3000'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("使用 gzip 压缩文件体积")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" zlib "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zlib'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nhttp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content-encoding'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gzip'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.html'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zlib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGzip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Server is running at http://localhost:3000'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);
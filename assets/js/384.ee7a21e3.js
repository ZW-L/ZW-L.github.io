(window.webpackJsonp=window.webpackJsonp||[]).push([[384],{817:function(t,e,v){"use strict";v.r(e);var _=v(25),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"http://nodejs.cn/api/path.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("path"),v("OutboundLink")],1),t._v(" 模块提供用于处理文件路径和目录路径的实用工具")])]),t._v(" "),v("h2",{attrs:{id:"属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("path.delimiter: ':' | ';'")]),t._v("：返回操作系统特定的路径定界符（Windows 为 "),v("code",[t._v(";")]),t._v("）")]),t._v(" "),v("li",[v("code",[t._v("path.sep: '\\' | '/'")]),t._v("：返回操作系统特定的路径片段分隔符（Windows 为 "),v("code",[t._v("\\")]),t._v("）")]),t._v(" "),v("li",[v("code",[t._v("path.posix: object")]),t._v("：提供对 "),v("code",[t._v("path")]),t._v(" 方法的 POSIX 特定实现的访问")]),t._v(" "),v("li",[v("code",[t._v("path.win32: object")]),t._v("：提供对 "),v("code",[t._v("path")]),t._v(" 方法的 Windows 特定实现的访问")])]),t._v(" "),v("h2",{attrs:{id:"方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("path.basename(path: string, ext?: string): string")]),t._v("：返回指定路径的最后一部分，即最后一个 "),v("code",[t._v("/")]),t._v(" 之后的内容（指定了 "),v("code",[t._v("ext")]),t._v(" 参数后返回值不包含 "),v("code",[t._v("ext")]),t._v(" 部分）")]),t._v(" "),v("li",[v("code",[t._v("path.dirname(path: string): string")]),t._v("：返回指定路径的目录名，即最后一个 "),v("code",[t._v("/")]),t._v(" 之前的内容")]),t._v(" "),v("li",[v("code",[t._v("path.extname(path: string): string")]),t._v("：返回指定路径的扩展名，即最后一个 "),v("code",[t._v(".")]),t._v(" 以及之后的内容")]),t._v(" "),v("li",[v("code",[t._v("path.parse(path: string): object")]),t._v("：返回一个表示指定路径的各个属性的对象")]),t._v(" "),v("li",[v("code",[t._v("path.format(pathObj: object): string")]),t._v("：返回路径字符串，与 "),v("code",[t._v("parser()")]),t._v(" 相反")]),t._v(" "),v("li",[v("code",[t._v("path.isAbsolute(path: string): boolean")]),t._v("：检测是否为绝对路径")]),t._v(" "),v("li",[v("code",[t._v("path.relative(from: string, to: string): string")]),t._v("：根据当前工作目录返回相对路径")]),t._v(" "),v("li",[v("code",[t._v("path.join(...path: string): string")]),t._v("：使用操作系统特定的路径定界符将所有路径片段连接")]),t._v(" "),v("li",[v("code",[t._v("path.normalize(path: string): string")]),t._v("：将给定的路径规范化")]),t._v(" "),v("li",[v("code",[t._v("path.resolve(...path: string)")]),t._v("：将路径或路径片段的序列解析为绝对路径")]),t._v(" "),v("li",[v("code",[t._v("path.toNamespacedPath(path: string): string")]),t._v("：返回指定路径的等效名称空间前缀路径（Windows）")])])])}),[],!1,null,null,null);e.default=a.exports}}]);
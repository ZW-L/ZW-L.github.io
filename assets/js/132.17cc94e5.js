(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{541:function(_,v,a){"use strict";a.r(v);var t=a(25),r=Object(t.a)({},(function(){var _=this,v=_.$createElement,a=_._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h2",{attrs:{id:"服务端-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端-api"}},[_._v("#")]),_._v(" 服务端 API")]),_._v(" "),a("ul",[a("li",[_._v("服务端 "),a("code",[_._v("API")]),_._v("(Application Programming Interface，应用程序编程接口)，在程序内部指的是各个模块、函数、类的调用参数和返回值，在程序外部指不同程序之间的调用参数和返回结果。在 Web 中指的是前后端通信的接口，一般借助 HTTP(S) 协议来实现")]),_._v(" "),a("li",[_._v("当前流行的 Web API 设计规范为 "),a("code",[_._v("REST API")]),_._v(" 和 "),a("code",[_._v("GraphQL")])])]),_._v(" "),a("h2",{attrs:{id:"rest-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rest-api"}},[_._v("#")]),_._v(" REST API")]),_._v(" "),a("h3",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[_._v("#")]),_._v(" 介绍")]),_._v(" "),a("ul",[a("li",[_._v("简称 "),a("code",[_._v("REST")]),_._v("(Representation State Transfer，表现层状态转换)，指的是一种设计风格(不是标准)")]),_._v(" "),a("li",[_._v("可以根据团队定制不同的命名规范")]),_._v(" "),a("li",[a("strong",[_._v("特点：")]),_._v(" "),a("ul",[a("li",[_._v("所有通信都是无状态的，状态统一由客户端进行维护，减轻了服务端的压力")]),_._v(" "),a("li",[_._v("可以利用缓存来提升通信效率")]),_._v(" "),a("li",[_._v("可结合一些 HTTP 协议的特点：用 URL 的方式指向不同的资源")])])])]),_._v(" "),a("h3",{attrs:{id:"定制规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定制规范"}},[_._v("#")]),_._v(" 定制规范")]),_._v(" "),a("ul",[a("li",[a("strong",[_._v("请求路径")]),_._v(" "),a("ul",[a("li",[_._v("所有请求路径对应特点的资源，不要包含动词、形容词等修饰符，必要时应该使用复数")]),_._v(" "),a("li",[_._v("多个单词组合使用 "),a("code",[_._v("songList")]),_._v(", "),a("code",[_._v("song_list")]),_._v(", "),a("code",[_._v("song-list")]),_._v(" 三者之一")]),_._v(" "),a("li",[_._v("合适的资源嵌套层级，使用 id 占位符("),a("code",[_._v(":id")]),_._v(")标识资源")]),_._v(" "),a("li",[_._v("用参数对资源进行过滤而不是使用无规则的 URL，参数之间用 "),a("code",[_._v("&")]),_._v(" 分开，多个参数值用 "),a("code",[_._v(",")]),_._v(" 分开")])])]),_._v(" "),a("li",[a("strong",[_._v("请求头部")]),_._v(": 不同的操作使用对应语义的请求方法\n"),a("ul",[a("li",[a("code",[_._v("GET")]),_._v(": 获取资源，常用于查询")]),_._v(" "),a("li",[a("code",[_._v("POST")]),_._v(": 创建资源，或数据提交(用户登录等)")]),_._v(" "),a("li",[a("code",[_._v("PUT")]),_._v(": 修改资源")]),_._v(" "),a("li",[a("code",[_._v("DELETE")]),_._v(": 删除资源")])])]),_._v(" "),a("li",[a("strong",[_._v("请求体")]),_._v(": 一般采用 JSON 格式提交数据(文件上传除外)")]),_._v(" "),a("li",[a("strong",[_._v("响应头部")]),_._v(": 遵循 HTTP(S) 规范的状态码和状态信息描述请求结果")]),_._v(" "),a("li",[a("strong",[_._v("响应体")]),_._v(" "),a("ul",[a("li",[_._v("一般响应为 JSON 格式")]),_._v(" "),a("li",[_._v("响应结果处理: 包括响应描述和响应分页")])])])]),_._v(" "),a("h3",{attrs:{id:"工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工具"}},[_._v("#")]),_._v(" 工具")]),_._v(" "),a("ul",[a("li",[_._v("Swagger")])]),_._v(" "),a("h2",{attrs:{id:"graphql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#graphql"}},[_._v("#")]),_._v(" GraphQL")]),_._v(" "),a("h3",{attrs:{id:"介绍-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍-2"}},[_._v("#")]),_._v(" 介绍")]),_._v(" "),a("ul",[a("li",[_._v("简称 "),a("code",[_._v("GraphQL")]),_._v("(Graph Query Language，图表化查询语言)，由 "),a("code",[_._v("Facebook")]),_._v(" 推出。")]),_._v(" "),a("li",[a("strong",[_._v("特点：")]),_._v(" "),a("ul",[a("li",[_._v("它使用模式(Schema)来描述一类数据的结构，类似 mongoose 的形式")]),_._v(" "),a("li",[_._v("所有请求都使用 POST 方法，同时将 Schema 作为请求参数放入请求体中")])])])]),_._v(" "),a("h3",{attrs:{id:"设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计"}},[_._v("#")]),_._v(" 设计")]),_._v(" "),a("ul",[a("li",[a("strong",[_._v("类型")]),_._v(": 返回后端定义的类型")]),_._v(" "),a("li",[a("strong",[_._v("验证")]),_._v(": 后端对于不符合要求的 GraphQL 请求会给出明确的错误提示")]),_._v(" "),a("li",[a("strong",[_._v("内省")]),_._v(": 告诉调用者当前服务器指出哪些查询")]),_._v(" "),a("li",[a("strong",[_._v("查询与变更")]),_._v(": 查询操作以 "),a("code",[_._v("query")]),_._v(" 开头，变更操作以 "),a("code",[_._v("mutation")]),_._v(" 开头")])]),_._v(" "),a("h3",{attrs:{id:"工具-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工具-2"}},[_._v("#")]),_._v(" 工具")]),_._v(" "),a("ul",[a("li",[_._v("GraphiQL")]),_._v(" "),a("li",[_._v("GraphQL Voyager")])])])}),[],!1,null,null,null);v.default=r.exports}}]);
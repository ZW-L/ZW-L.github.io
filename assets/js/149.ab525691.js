(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{560:function(t,s,n){"use strict";n.r(s);var a=n(25),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"撤销操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#撤销操作"}},[t._v("#")]),t._v(" 撤销操作")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("git restore")]),t._v("：当文件修改了但未 commit 时，可以用来撤销文件的修改")])]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 场景1：修改了但未添加到暂存区")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" a.txt     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在这里修改了文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示 a.txt 已经修改但未添加到暂存区")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" restore a.txt   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时 a.txt 会变为修改前的样子 ")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 场景2：修改了且添加到暂存区")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" a.txt     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在这里修改了文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" a.txt "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加到暂存区")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示 a.txt 已经修改并添加到暂存区")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" restore --staged a.txt  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将 a.txt 移出暂存区")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" restore a.txt           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时 a.txt 会变为修改前的样子")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 场景3：恢复已删除的文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" hello world "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a.txt  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加到暂存区")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" a.txt          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用其他方式删除了文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" restore a.txt "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复被删除的文件")]),t._v("\n")])])]),n("ul",[n("li",[n("code",[t._v("git reset")]),t._v("：移动 HEAD 指针，回退版本，有几种不同的回退方式：\n"),n("ul",[n("li",[n("code",[t._v("mixed")]),t._v("：(默认)混合重置。将暂存区的文件全部移到工作区，并保留工作区的更改")]),t._v(" "),n("li",[n("code",[t._v("--soft")]),t._v("：软重置。保留暂存区和工作区的更改(也就是啥都不做)")]),t._v(" "),n("li",[n("code",[t._v("--hard")]),t._v("：硬重置。删除暂存区和工作区的更改(这时未提交的修改都会被删除)")])])])]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD^    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退到上一个版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD^^   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退到上上个版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD~10  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退十个版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard 1094a    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退到指定版本")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 场景1：回退了一个版本，但是又反悔了，此时在 log 中找不到记录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD^    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退到上一个版本")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交历史中已经没有最新版本的提交")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 能看到所有的提交历史，以及一些 reset 标记")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard aff6c95  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 再重置到最新版本的提交")]),t._v("\n")])])]),n("ul",[n("li",[n("code",[t._v("git revert")]),t._v("：删除指定版本的提交("),n("code",[t._v("git reset")]),t._v(" 是回退，会清除沿途的提交)，并生成一个新的 revert 提交记录")])]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 场景1：按顺序提交了四个版本，但是发现中间两个版本有 BUG")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 四个提交记录分别为：ef4c117 df7453b 7319001 e47e634")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert df7453b    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除第二个提交")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7319001")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除第三个提交，此时保留了第一个和第四个提交")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以下两种方式是一样的")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert df7453b "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7319001")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除多个提交，然后手动添加到暂存区并提交")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert ef4c117"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7319001")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 前开后闭区间，然后手动添加到暂存区并提交")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert --continue         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 完成这次批量操作")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 也可以批量操作后只提交一次")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert --no-commit df7453b "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7319001")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert --continue\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 若发生冲突时，需要手动处理冲突，再提交")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);
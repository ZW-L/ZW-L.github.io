(window.webpackJsonp=window.webpackJsonp||[]).push([[309],{734:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"基本类型和引用类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本类型和引用类型"}},[t._v("#")]),t._v(" 基本类型和引用类型")]),t._v(" "),a("h3",{attrs:{id:"区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),a("ul",[a("li",[t._v("基本数据类型：按值访问。值保存在栈中，操作的是实际的值")]),t._v(" "),a("li",[t._v("引用数据类型：按引用访问。值保存在堆中，值引用保存在栈中，操作的是值的引用")])]),t._v(" "),a("h3",{attrs:{id:"动态属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态属性"}},[t._v("#")]),t._v(" 动态属性")]),t._v(" "),a("ul",[a("li",[t._v("可以给数据类型添加属性，但是给基本数据类型添加属性时，并不能访问：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给基本类型添加属性")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Seven'")]),t._v("\nname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给引用类型添加属性")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Seven'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Seven")]),t._v("\n")])])]),a("h3",{attrs:{id:"变量的复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量的复制"}},[t._v("#")]),t._v(" 变量的复制")]),t._v(" "),a("ul",[a("li",[t._v("基本数据类型的复制会创建一个新的互不影响的副本")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\n\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12 10")]),t._v("\n")])])]),a("ul",[a("li",[t._v("引用数据类型的复制只能拷贝值的引用，属于浅拷贝，在任何一个引用中修改值，都会改变所有引用的副本")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Seven'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj\n\nobj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Anna'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Anna Anna")]),t._v("\n")])])]),a("h3",{attrs:{id:"参数传递"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数传递"}},[t._v("#")]),t._v(" 参数传递")]),t._v(" "),a("ul",[a("li",[t._v("尽管访问变量可以通过按值访问(基本数据类型)和按引用访问(引用类型)，但是参数的传递只是按值传递的；即使传递的是一个对象，传递的也是保存该对象的引用的值")]),t._v(" "),a("li",[t._v("误以为参数传递是按引用传递的例子：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Seven'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Anna'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'Anna'")]),t._v("\n")])])]),a("ul",[a("li",[t._v("证明参数传递是按值传递的例子：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Alice'")]),t._v("\n  obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Anna'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'Alice'")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("解析：")]),t._v(" "),a("ul",[a("li",[t._v("传递对象时，参数传递的是一个该对象的内存指向的指针值，在该指针上操作对象时会直接影响对象的属性")]),t._v(" "),a("li",[t._v("但在函数内部用一个新的对象给 obj 指针赋值时，此时的 obj 指向的是新对象，在它之后的操作只会影响新对象，不会影响原来的对象")]),t._v(" "),a("li",[t._v("说明传递对象时只会传递一个指针值而不是传递一个完全的对象引用")])])]),t._v(" "),a("h2",{attrs:{id:"垃圾收集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垃圾收集"}},[t._v("#")]),t._v(" 垃圾收集")]),t._v(" "),a("h3",{attrs:{id:"垃圾回收机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制"}},[t._v("#")]),t._v(" 垃圾回收机制")]),t._v(" "),a("p",[t._v("Javascript 有自动的垃圾回收机制，浏览器的实现方式主要有两种：")]),t._v(" "),a("ul",[a("li",[t._v('标记清除法：当变量在一个环境中被创建时，会被标记为 "进入环境"，当其离开环境时，会被标记为 "离开环境"，垃圾回收器会定时对标记为 "离开环境" 的变量进行回收；'),a("strong",[t._v("是目前大多数浏览器使用的是该种方式")])]),t._v(" "),a("li",[a("code",[t._v("引用计数法")]),t._v("：该方法跟踪记录每个值被引用的次数，当一个值被一个变量引用时，它的引用次数就会加 1，当一个变量解除对它的引用时，它的引用次数就会减 1，垃圾回收器会定时对引用次数为 0 的值进行回收；"),a("strong",[t._v("因为容易遇到一个循环引用的问题，该方式很少被使用")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("备注：")]),t._v(" "),a("ul",[a("li",[t._v("IE9 之前的版本中的 "),a("code",[t._v("BOM")]),t._v(" 和 "),a("code",[t._v("DOM")]),t._v(" 对象是使用 "),a("code",[t._v("C++")]),t._v(" 以 "),a("code",[t._v("COM")]),t._v(" 的形式实现的，"),a("code",[t._v("COM")]),t._v(" 对象的垃圾回收机制采用的就是引用计数法，因此在 IE 中涉及 "),a("code",[t._v("COM")]),t._v(" 的情况下，都会容易发生循环引用的内存问题")]),t._v(" "),a("li",[t._v("解决循环引用的方式是手动断开变量和对象的链接，将变量赋值为 "),a("code",[t._v("null")])])])]),t._v(" "),a("h3",{attrs:{id:"性能问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能问题"}},[t._v("#")]),t._v(" 性能问题")]),t._v(" "),a("ul",[a("li",[t._v("有的浏览器能够手动触发垃圾收集过程，但是不建议使用")]),t._v(" "),a("li",[t._v("在数据不再使用的情况下，将其设置为 "),a("code",[t._v("null")]),t._v(" 来释放引用(称为解除引用)是更好的")]),t._v(" "),a("li",[t._v("解除引用的作用是让值退出环境，不代表内存马上会被释放，因为垃圾回收器是定时执行的")]),t._v(" "),a("li",[a("strong",[t._v("内存泄漏：")]),t._v(" 申请的内存执行完后没有及时的清理或者销毁，占用空闲内存，内存泄露过多会导致后面的程序申请不到内存")]),t._v(" "),a("li",[a("strong",[t._v("堆栈溢出：")]),t._v(" 内存空间已经被申请完，没有足够的内存提供")]),t._v(" "),a("li",[a("strong",[t._v("内存泄露的原因：")]),t._v(" "),a("ul",[a("li",[t._v("全局变量")]),t._v(" "),a("li",[t._v("闭包")]),t._v(" "),a("li",[t._v("计时器/定时器")])])]),t._v(" "),a("li",[a("strong",[t._v("解决：")]),t._v(" "),a("ul",[a("li",[t._v("较少不必要的全局变量")]),t._v(" "),a("li",[t._v("减少闭包的使用")]),t._v(" "),a("li",[t._v("在合适的时候清除计时器")]),t._v(" "),a("li",[t._v("避免死循环")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);
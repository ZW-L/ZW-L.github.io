(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{543:function(v,_,o){"use strict";o.r(_);var e=o(25),i=Object(e.a)({},(function(){var v=this,_=v.$createElement,o=v._self._c||_;return o("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[o("h2",{attrs:{id:"介绍"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[v._v("#")]),v._v(" 介绍")]),v._v(" "),o("p",[v._v("  由于 "),o("code",[v._v("HTTP")]),v._v(" 是无状态的，不能保存客户端的状态(验证登录等情况时)，因此 "),o("code",[v._v("HTTP/1.1")]),v._v(" 引入了 "),o("code",[v._v("Cookie")]),v._v(" 技术来缓存状态。")]),v._v(" "),o("h2",{attrs:{id:"分类"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[v._v("#")]),v._v(" 分类")]),v._v(" "),o("ul",[o("li",[v._v("持久化 "),o("code",[v._v("Cookie")]),v._v(": 保存在硬盘中，由一个过期时间(或被用户手动清理)")]),v._v(" "),o("li",[v._v("非持久化 "),o("code",[v._v("Cookie")]),v._v(": 保存在内存中，相当于临时缓存，在浏览器关闭后消失")])]),v._v(" "),o("h2",{attrs:{id:"使用"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[v._v("#")]),v._v(" 使用")]),v._v(" "),o("ul",[o("li",[v._v("请求报文的 "),o("code",[v._v("Cookie")]),v._v(" 字段: "),o("code",[v._v("Cookie")])]),v._v(" "),o("li",[v._v("响应报文的 "),o("code",[v._v("Cookie")]),v._v(" 字段: "),o("code",[v._v("set-Cookie")]),v._v("，可以使用多个该字段，并且可以使用以下几个附加属性("),o("code",[v._v("键=值")]),v._v(" 的形式，多个属性间用 "),o("code",[v._v(";")]),v._v(" 分隔):\n"),o("ul",[o("li",[o("code",[v._v("expires")]),v._v(": 指定数据的有效期，否则默认在浏览器关闭后消失；而且当 "),o("code",[v._v("Cookie")]),v._v(" 从浏览器发出后就无法直接删除，只能覆盖")]),v._v(" "),o("li",[o("code",[v._v("path")]),v._v(": 指定 "),o("code",[v._v("Cookie")]),v._v(" 发送范围的路径，默认为根路径")]),v._v(" "),o("li",[o("code",[v._v("domain")]),v._v(": 指定 "),o("code",[v._v("Cookie")]),v._v(" 适用的域名，匹配规则为结尾匹配")]),v._v(" "),o("li",[o("code",[v._v("secure")]),v._v(": 指定 "),o("code",[v._v("Cookie")]),v._v(" 只能在 HTTPS 安全连接中使用，默认可在 HTTP/HTTPS 中使用")]),v._v(" "),o("li",[o("code",[v._v("HttpOnly")]),v._v(": 指定浏览器端的 Javascript 脚本无法获取 "),o("code",[v._v("Cookie")]),v._v(" 内容(从而无法轻易修改或删除)，常用于防止跨站脚本(XSS)对 "),o("code",[v._v("Cookie")]),v._v(" 信息的窃取")])])])]),v._v(" "),o("h2",{attrs:{id:"缺陷"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#缺陷"}},[v._v("#")]),v._v(" 缺陷")]),v._v(" "),o("ul",[o("li",[v._v("大小受限，浏览器限制为 4KB 左右")]),v._v(" "),o("li",[v._v("消耗网络带宽")]),v._v(" "),o("li",[v._v("可以被客户端禁用的")]),v._v(" "),o("li",[v._v("可能会被窃取或篡改")]),v._v(" "),o("li",[v._v("场景受限，有些端不支持 "),o("code",[v._v("Cookie")]),v._v("(微信小程序)")])]),v._v(" "),o("h2",{attrs:{id:"对比其他存储"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#对比其他存储"}},[v._v("#")]),v._v(" 对比其他存储")]),v._v(" "),o("table",[o("thead",[o("tr",[o("th",[v._v("存储方式")]),v._v(" "),o("th",[v._v("说明")]),v._v(" "),o("th",[v._v("容量")]),v._v(" "),o("th",[v._v("特点")])])]),v._v(" "),o("tbody",[o("tr",[o("td",[v._v("Cookie")]),v._v(" "),o("td",[v._v("服务端设置，分为持久化 Cookie和非持久化 Cookie")]),v._v(" "),o("td",[v._v("4KB 左右")]),v._v(" "),o("td",[v._v("容量小，可被禁用，可能被窃取或篡改，在同源窗口中共享的")])]),v._v(" "),o("tr",[o("td",[v._v("Session Storage")]),v._v(" "),o("td",[v._v("浏览器全局对象，非持久化存储")]),v._v(" "),o("td",[v._v("5MB")]),v._v(" "),o("td",[v._v("只能存储简单数据(复杂数据只能 json 化)，页面关闭后清除，不同域之间不共享")])]),v._v(" "),o("tr",[o("td",[v._v("Locale Storage")]),v._v(" "),o("td",[v._v("浏览器全局对象，持久化存储")]),v._v(" "),o("td",[v._v("5MB")]),v._v(" "),o("td",[v._v("只能存储简单数据(复杂数据只能 json 化)，不会消失，除非手动清除，在同源窗口中共享的")])]),v._v(" "),o("tr",[o("td",[v._v("Indexed DB")]),v._v(" "),o("td",[v._v("浏览器非关系型数据库(NoSQL)")]),v._v(" "),o("td",[v._v("-")]),v._v(" "),o("td",[v._v("直接将数据存储在浏览器端的数据库中")])])])]),v._v(" "),o("h2",{attrs:{id:"cookie-与状态"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie-与状态"}},[v._v("#")]),v._v(" Cookie 与状态")]),v._v(" "),o("p",[v._v("  在 "),o("code",[v._v("Cookie")]),v._v(" 的使用场景中，最重要的是授权认证。授权认证的常用方式有两种：基于 "),o("code",[v._v("Cookie")]),v._v("、基于 "),o("code",[v._v("Token")]),v._v("，他们的实现有所不同，但步骤大致相同。")]),v._v(" "),o("p",[o("strong",[v._v("授权认证的步骤：")])]),v._v(" "),o("ul",[o("li",[v._v("保存登录状态信息：浏览器发送 "),o("code",[v._v("POST")]),v._v(" 请求提交登录信息 --\x3e 服务端响应信息、验证通过并返回一个状态值来保存登录状态")]),v._v(" "),o("li",[v._v("提取登陆状态信息：登录完成后 --\x3e 浏览器发送请求，服务端总能获取浏览器的登录状态，从而正确响应页面")])]),v._v(" "),o("p",[o("strong",[v._v("授权认证的方式：")])]),v._v(" "),o("ul",[o("li",[v._v("基于 "),o("code",[v._v("Cookie")]),v._v(" "),o("ol",[o("li",[v._v("服务端收到浏览器请求后，创建一个 "),o("code",[v._v("Session")]),v._v(" 会话，保存在服务端的内存或数据库中")]),v._v(" "),o("li",[v._v("接着生成一个随机的、唯一的 id，用来和会话信息进行映射并写入 "),o("code",[v._v("Cookie")]),v._v("，该 "),o("code",[v._v("Cookie")]),v._v(" 通常带 "),o("code",[v._v("HttpOnly")]),v._v(" 属性")])])]),v._v(" "),o("li",[v._v("基于 "),o("code",[v._v("Token")]),v._v(" "),o("ol",[o("li",[v._v("服务端收到浏览器请求后，对用户信息进行编码(生成一串较长的字符串)")]),v._v(" "),o("li",[v._v("将该字符串作为 "),o("code",[v._v("Token")]),v._v(" 字段的属性值，返回给浏览器")])])])]),v._v(" "),o("p",[o("strong",[v._v("两种认证方式的主要区别：")])]),v._v(" "),o("ul",[o("li",[v._v("基于 "),o("code",[v._v("Cookie")]),v._v("：有状态。获取状态时，服务端要获取请求头部的 "),o("code",[v._v("Cookie")]),v._v(" 字段的 "),o("code",[v._v("Session")]),v._v(" 属性值，再找到之前保存在服务端的会话信息进行校验；这种方式需要客户端和服务端都保存信息")]),v._v(" "),o("li",[v._v("基于 "),o("code",[v._v("Token")]),v._v("：无状态。获取状态时，直接利用密钥信息对 "),o("code",[v._v("Token")]),v._v(" 进行解密和校验；这种方式下服务端不用保存信息，能够减轻服务端的压力，也可用于不支持 "),o("code",[v._v("Cookie")]),v._v(" 的情况(微信小程序)")])]),v._v(" "),o("p",[o("strong",[v._v("基于 Token 的优点：")])]),v._v(" "),o("ul",[o("li",[o("strong",[v._v("无状态")]),v._v(": 服务端不用保存状态信息，减轻服务端压力")]),v._v(" "),o("li",[o("strong",[v._v("域无关")]),v._v(": "),o("code",[v._v("Cookie")]),v._v(" 与域有关，"),o("code",[v._v("Token")]),v._v(" 与域无关")]),v._v(" "),o("li",[o("strong",[v._v("性能好")]),v._v(": 请求头部会自动带上 "),o("code",[v._v("Cookie")]),v._v("，占用带宽，而 "),o("code",[v._v("Token")]),v._v(" 则可以按需添加；另外服务端收到 "),o("code",[v._v("Cookie")]),v._v(" 后可能要在数据库中查询认证，而 "),o("code",[v._v("Token")]),v._v(" 则直接解密认证")]),v._v(" "),o("li",[o("strong",[v._v("通用性强")]),v._v(": 很多设备(或小程序等应用)不支持 "),o("code",[v._v("Cookie")]),v._v("，而且 "),o("code",[v._v("Cookie")]),v._v(" 可以被用户禁用，因此 "),o("code",[v._v("Token")]),v._v(" 通用性更好")])]),v._v(" "),o("p",[o("strong",[v._v("创建 Token 的方式：")])]),v._v(" "),o("p",[v._v("使用最多的是 "),o("code",[v._v("JSON Web Token")]),v._v("，简称 "),o("code",[v._v("JWT")]),v._v("。该方式生成的 "),o("code",[v._v("Token")]),v._v(" 分为三个部分(通过 "),o("code",[v._v(".")]),v._v(" 分割)：")]),v._v(" "),o("ul",[o("li",[o("code",[v._v("Header")]),v._v(": 头部。由算法和 "),o("code",[v._v("Token")]),v._v(" 类型组成，属性名使用简写: "),o("code",[v._v('{ "alg": "HS256", "typ": "JWT" }')])]),v._v(" "),o("li",[o("code",[v._v("Payload")]),v._v(": 负载。")]),v._v(" "),o("li",[o("code",[v._v("Signature")]),v._v(": 签名。")])]),v._v(" "),o("h2",{attrs:{id:"理解和区别-token-cookie-session"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#理解和区别-token-cookie-session"}},[v._v("#")]),v._v(" 理解和区别 Token/Cookie/Session")]),v._v(" "),o("ul",[o("li",[o("code",[v._v("Cookie")]),v._v("：\n"),o("ul",[o("li",[v._v("浏览器里面能永久存储的一种数据，由服务器生成，发送给浏览器")]),v._v(" "),o("li",[v._v("浏览器把 "),o("code",[v._v("Cookie")]),v._v(" 以 "),o("code",[v._v("k-v")]),v._v(" 形式保存到某个目录下的文本文件内，下一次请求同一网站时会把该 "),o("code",[v._v("Cookie")]),v._v(" 发送给服务器")]),v._v(" "),o("li",[v._v("浏览器加入了一些限制确保 "),o("code",[v._v("Cookie")]),v._v(" 不会被恶意使用，同时每个域的 "),o("code",[v._v("Cookie")]),v._v(" 数量是有限的")])])]),v._v(" "),o("li",[o("code",[v._v("Session")]),v._v("：\n"),o("ul",[o("li",[v._v("会话，服务器给客户端分配的不同的身份标识，客户端每次向服务器发请求的时候都带上这个身份标识")]),v._v(" "),o("li",[v._v("在基于 "),o("code",[v._v("Session")]),v._v(" 的身份验证中，服务器将在用户登录后为用户创建一个 "),o("code",[v._v("Session")]),v._v("。然后，"),o("code",[v._v("Session ID")]),v._v(" 会被存储在用户浏览器的 "),o("code",[v._v("Cookie")]),v._v(" 中。当用户保持登录状态时，"),o("code",[v._v("Cookie")]),v._v(" 将与每个后续请求一起被发送出去。然后，服务器可以将存储在 "),o("code",[v._v("Cookie")]),v._v(" 上的 "),o("code",[v._v("Session ID")]),v._v(" 与存储在内存中或者数据库中的 "),o("code",[v._v("Session")]),v._v(" 信息进行比较，以验证用户的身份，返回给用户客户端响应信息的时候会附带用户当前的状态")]),v._v(" "),o("li",[v._v("客户端有多种方式保存这个身份标识，浏览器端一般采用 "),o("code",[v._v("Cookie")]),v._v(" 的方式")]),v._v(" "),o("li",[v._v("服务器使用 "),o("code",[v._v("Session")]),v._v(" 把用户的信息临时保存在服务器上，用户离开网站后 "),o("code",[v._v("Session")]),v._v(" 会被销毁，这种用户信息存储方式相对 "),o("code",[v._v("Cookie")]),v._v(" 来说更安全，但是有一个缺陷：如果 Web 服务器做了负载均衡，那么下一个操作请求到另一台服务器的时候"),o("code",[v._v("Session")]),v._v(" 会丢失")])])]),v._v(" "),o("li",[o("code",[v._v("Token")]),v._v("：\n"),o("ul",[o("li",[v._v("无状态：基于 "),o("code",[v._v("Token")]),v._v(" 的身份验证是无状态的，不将用户信息存在服务器或 "),o("code",[v._v("Session")])]),v._v(" "),o("li",[v._v("安全性："),o("code",[v._v("Token")]),v._v(" 是有时效的，一段时间之后用户需要重新验证，也可以手动撤回 "),o("code",[v._v("Token")])]),v._v(" "),o("li",[v._v("可扩展性："),o("code",[v._v("Token")]),v._v(" 能够创建与其它程序共享权限的程序")]),v._v(" "),o("li",[v._v("多平台跨域：只要用户有一个通过了验证的 "),o("code",[v._v("Token")]),v._v("，数据和资源就能够在任何域上被请求到")]),v._v(" "),o("li",[v._v("基于标准：创建 "),o("code",[v._v("Token")]),v._v(" 的时候，可以设定一些选项")])])])])])}),[],!1,null,null,null);_.default=i.exports}}]);